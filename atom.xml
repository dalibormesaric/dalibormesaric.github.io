<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Developer&#39;s Challenges</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://developerschallenges.com/"/>
  <updated>2017-11-02T16:07:03.000Z</updated>
  <id>https://developerschallenges.com/</id>
  
  <author>
    <name>Dalibor Mesarić</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Episerver: All properties component for showing and hiding content using a drop-down</title>
    <link href="https://developerschallenges.com/2017/11/02/episerver-all-properties-component-for-showing-and-hiding-content-using-a-drop-down/"/>
    <id>https://developerschallenges.com/2017/11/02/episerver-all-properties-component-for-showing-and-hiding-content-using-a-drop-down/</id>
    <published>2017-11-01T23:00:00.000Z</published>
    <updated>2017-11-02T16:07:03.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/posts/2017-11-02-episerver-all-properties-component-for-showing-and-hiding-content-using-a-drop-down/hero.png"></p><p>As a follow up to my previous article about grouping properties in a property block, I’ll describe how to create a component for showing and hiding content in all properties mode using a drop-down.<br><a id="more"></a></p><hr><p>Having part of your form visible depending on some selection is a pretty normal use case. It is clear to the user what is selected and which other inputs are available, instead of just showing everything.</p><p>The challenge was figuring out how backend (Blocks) and frontend (Dojo) are working in together Episerver. There is a <a href="http://world.episerver.com/Blogs/Duong-Nguyen/Dates/2014/1/Country-Region-drop-down-lists-in-All-properties-mode/" target="_blank" rel="external">great article that helped me understand this</a>. My goal was slightly different, so I’ll describe my thought process while figuring out the solution.</p><p>The scenario I will describe is following: There are three different pet types in our system. The user can choose only one using a dropdown. Each choice shows only properties for that pet type. Each pet type is a block with its own properties, and we are using each of those blocks as a <a href="/2017/04/22/episerver-how-to-get-title-in-all-properties-view">property block</a> next to a dropdown.</p><p>To create a demo project, follow instructions from the <a href="/2017/04/22/episerver-how-to-get-title-in-all-properties-view/">last blog post</a>.</p><p>First step is pretty straigh foreward - create a new page type or a block with all the properties described in the scenario. For a dropdown use <a href="https://world.episerver.com/blogs/Linus-Ekstrom/Dates/2013/12/SingleMultiple-selection-in-EPiServer-75/" target="_blank" rel="external">single selection solution</a> from Episerver.<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// PetTypeBlock.cs</span></div><div class="line">[<span class="meta">ContentType(DisplayName = <span class="meta-string">"PetTypeBlock"</span>, GUID = <span class="meta-string">"5d414eb6-de73-49db-a12c-c750fce4578c"</span>, Description = <span class="meta-string">""</span>, AvailableInEditMode = false)</span>]</div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PetTypeBlock</span> : <span class="title">BlockData</span></div><div class="line">&#123;</div><div class="line">    [<span class="meta">SelectOne(SelectionFactoryType = typeof(PetTypeSelectionFactory))</span>]</div><div class="line">    [<span class="meta">Display(Name = <span class="meta-string">"Pet Type"</span>, GroupName = SystemTabNames.Content, Order = 1)</span>]</div><div class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">string</span> SelectedPetType &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line"></div><div class="line">    [<span class="meta">Display(Name = <span class="meta-string">"Cat"</span>, GroupName = SystemTabNames.Content, Order = 10)</span>]</div><div class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> CatBlock CatBlock &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line"></div><div class="line">    [<span class="meta">Display(Name = <span class="meta-string">"Dog"</span>, GroupName = SystemTabNames.Content, Order = 20)</span>]</div><div class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> DogBlock DogBlock &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line"></div><div class="line">    [<span class="meta">Display(Name = <span class="meta-string">"Fish"</span>, GroupName = SystemTabNames.Content, Order = 30)</span>]</div><div class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> FishBlock FishBlock &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">SetDefaultValues</span>(<span class="params">ContentType contentType</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">base</span>.SetDefaultValues(contentType);</div><div class="line"></div><div class="line">        SelectedPetType = ((<span class="keyword">int</span>)PetType.None).ToString();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PetTypeSelectionFactory</span> : <span class="title">ISelectionFactory</span></div><div class="line">&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> IEnumerable&lt;ISelectItem&gt; <span class="title">GetSelections</span>(<span class="params">ExtendedMetadata metadata</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ISelectItem[] &#123;</div><div class="line">            <span class="keyword">new</span> SelectItem() &#123; Text = PetType.None.ToString(), Value = ((<span class="keyword">int</span>)PetType.None).ToString() &#125;,</div><div class="line">            <span class="keyword">new</span> SelectItem() &#123; Text = PetType.Cat.ToString(), Value = ((<span class="keyword">int</span>)PetType.Cat).ToString() &#125;,</div><div class="line">            <span class="keyword">new</span> SelectItem() &#123; Text = PetType.Dog.ToString(), Value = ((<span class="keyword">int</span>)PetType.Dog).ToString() &#125;,</div><div class="line">            <span class="keyword">new</span> SelectItem() &#123; Text = PetType.Fish.ToString(), Value = ((<span class="keyword">int</span>)PetType.Fish).ToString() &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">enum</span> PetType</div><div class="line">&#123;</div><div class="line">    None = <span class="number">0</span>,</div><div class="line">    Cat = <span class="number">1</span>,</div><div class="line">    Dog = <span class="number">2</span>,</div><div class="line">    Fish = <span class="number">3</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>Next step is to create editor descriptor so that Episerver knows on which object we want the Dojo script to load, and the actual path to the script. Editor descriptors are usually placed inside the <code>Business</code> folder. <code>ClientLayoutClass</code> path is related to what is described in the next step.<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// StartPageEditorDescriptor.cs</span></div><div class="line">[<span class="meta">EditorDescriptorRegistration(TargetType = typeof(PetTypeBlock))</span>]</div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">StartPageEditorDescriptor</span> : <span class="title">EditorDescriptor</span></div><div class="line">&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ModifyMetadata</span>(<span class="params">ExtendedMetadata metadata, IEnumerable&lt;Attribute&gt; attributes</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">base</span>.ModifyMetadata(metadata, attributes);</div><div class="line">        metadata.Properties.Cast&lt;ExtendedMetadata&gt;().First().GroupSettings.ClientLayoutClass = <span class="string">"myapp/editors/PetTypeContainer"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>In the root of your project in <code>modules.config</code> you have to declare what your Episerver scripts folder is - in this case it is in <code>ProjectRoot\ClientResources\Scripts</code>. ClientResources folder is Episerver convention.</p><p><img src="/images/posts/2017-11-02-episerver-all-properties-component-for-showing-and-hiding-content-using-a-drop-down/project_tree.png"></p><p><code>myapp</code> is a connection between the script and <code>ClientLayoutClass</code> path from <code>StartPageEditorDescriptor</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">dojo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">paths</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"myapp"</span> <span class="attr">path</span>=<span class="string">"Scripts"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">paths</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">dojo</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">module</span>&gt;</span></div></pre></td></tr></table></figure></p><p>The script is the mix of Dojo and jQuery. It is not an elegant solution, but it works. The challenge was finding the right element which represents one of the added blocks we want to show/hide. I <a href="https://world.episerver.com/forum/developer-forum/Problems-and-bugs/Thread-Container/2017/3/internet-explorer-not-rendering-name-attribute/" target="_blank" rel="external">asked on Epi formus</a> about some inconsistencies regarding generated HTML, but no cigar.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// PetTypeContainer.js</span></div><div class="line">define([</div><div class="line">    <span class="string">"dojo/_base/declare"</span>,</div><div class="line"></div><div class="line">    <span class="string">"epi/shell/layout/SimpleContainer"</span></div><div class="line">],</div><div class="line"><span class="function"><span class="keyword">function</span> (<span class="params"></span></span></div><div class="line"><span class="function"><span class="params">    declare,</span></span></div><div class="line"><span class="function"><span class="params"></span></span></div><div class="line"><span class="function"><span class="params">    SimpleContainer</span></span></div><div class="line"><span class="function"><span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> declare([SimpleContainer], &#123;</div><div class="line">        petTypeDropdown: <span class="literal">null</span>,</div><div class="line"></div><div class="line">        addChild: <span class="function"><span class="keyword">function</span> (<span class="params">child</span>) </span>&#123;</div><div class="line">            <span class="keyword">this</span>.inherited(<span class="built_in">arguments</span>);</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (child.name.indexOf(<span class="string">"petType"</span>) &gt;= <span class="number">0</span>) &#123;</div><div class="line">                <span class="keyword">this</span>.petTypeDropdown = child;</div><div class="line">                <span class="keyword">var</span> self = <span class="keyword">this</span>;</div><div class="line"></div><div class="line">                setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                    self._hideAll();</div><div class="line">                &#125;, <span class="number">0</span>);</div><div class="line">                <span class="keyword">this</span>.own(<span class="keyword">this</span>.petTypeDropdown.on(<span class="string">"change"</span>,</div><div class="line">                    <span class="function"><span class="keyword">function</span> (<span class="params">petType</span>) </span>&#123;</div><div class="line">                        self._hideAll();</div><div class="line">                        self._updateVisiblePetType(petType);</div><div class="line">                    &#125;));</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line"></div><div class="line">        _updateVisiblePetType: <span class="function"><span class="keyword">function</span> (<span class="params">petType</span>) </span>&#123;</div><div class="line">            <span class="keyword">switch</span> (petType) &#123;</div><div class="line">                <span class="keyword">case</span> <span class="string">"1"</span>:</div><div class="line">                    $(<span class="built_in">document</span>).find(<span class="string">'input[name*=petType.selectedPetType]'</span>).closest(<span class="string">'ul'</span>).children().eq(<span class="number">1</span>).show();</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="string">"2"</span>:</div><div class="line">                    $(<span class="built_in">document</span>).find(<span class="string">'input[name*=petType.selectedPetType]'</span>).closest(<span class="string">'ul'</span>).children().eq(<span class="number">2</span>).show();</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="string">"3"</span>:</div><div class="line">                    $(<span class="built_in">document</span>).find(<span class="string">'input[name*=petType.selectedPetType]'</span>).closest(<span class="string">'ul'</span>).children().eq(<span class="number">3</span>).show();</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">default</span>:</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line"></div><div class="line">        _hideAll: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            $(<span class="built_in">document</span>).find(<span class="string">'input[name*=petType.selectedPetType]'</span>).closest(<span class="string">'ul'</span>).children().eq(<span class="number">1</span>).hide();</div><div class="line">            $(<span class="built_in">document</span>).find(<span class="string">'input[name*=petType.selectedPetType]'</span>).closest(<span class="string">'ul'</span>).children().eq(<span class="number">2</span>).hide();</div><div class="line">            $(<span class="built_in">document</span>).find(<span class="string">'input[name*=petType.selectedPetType]'</span>).closest(<span class="string">'ul'</span>).children().eq(<span class="number">3</span>).hide();</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p><p>As a final step, if you created a block instead of a page - add that block compoment to the page.<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// PetType.cs</span></div><div class="line">[<span class="meta">ContentType(DisplayName = <span class="meta-string">"PetPage"</span>, GUID = <span class="meta-string">"317e0860-8466-4817-8c9e-b33e83a297a4"</span>, Description = <span class="meta-string">""</span>)</span>]</div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PetPage</span> : <span class="title">PageData</span></div><div class="line">&#123;</div><div class="line">    [<span class="meta">Display(Name = <span class="meta-string">"Pet Type"</span>, GroupName = SystemTabNames.Content, Order = 10)</span>]</div><div class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> PetTypeBlock PetType &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>The end result is a dropdown that shows different blocks.</p><p><img src="/images/posts/2017-11-02-episerver-all-properties-component-for-showing-and-hiding-content-using-a-drop-down/dropdown.gif"></p><p>This turned out to be very usefull feature for my project, and hopefully you will find good use for it in your projects as well!</p><hr><p><em>To take screenshots I use <a href="https://app.prntscr.com/" target="_blank" rel="external">LightShot</a></em><br><em>To record gifs I use <a href="https://github.com/NickeManarin/ScreenToGif/" target="_blank" rel="external">ScreenToGif</a></em></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/posts/2017-11-02-episerver-all-properties-component-for-showing-and-hiding-content-using-a-drop-down/hero.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;As a follow up to my previous article about grouping properties in a property block, I’ll describe how to create a component for showing and hiding content in all properties mode using a drop-down.&lt;br&gt;
    
    </summary>
    
    
      <category term="episerver" scheme="https://developerschallenges.com/tags/episerver/"/>
    
      <category term="tips" scheme="https://developerschallenges.com/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>Episerver: How to get title in All Properties view?</title>
    <link href="https://developerschallenges.com/2017/04/22/episerver-how-to-get-title-in-all-properties-view/"/>
    <id>https://developerschallenges.com/2017/04/22/episerver-how-to-get-title-in-all-properties-view/</id>
    <published>2017-04-21T22:00:00.000Z</published>
    <updated>2017-10-27T16:31:55.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/posts/2017-04-22-episerver-how-to-get-title-in-all-properties-view/2017-04-22-episerver-how-to-get-title-in-all-properties-view.png"></p><p>In this article I will describe how to group properties and get a title above them. This will enable some other useful features as well.<br><a id="more"></a></p><hr><p>As I fairly reacently started using Episerver, I started where I think everyone starts these days - the Alloy demo. I saw a nicely grouped Logotype section, with a title and some property fields. I wanted to use the same grouping for the properties I was building for my block, but it was just not obvious where was this coming from.</p><p><img src="/images/posts/2017-04-22-episerver-how-to-get-title-in-all-properties-view/logotype.png"></p><p>Inspecting the HTML showed that the title is rendered as <code>legend</code> within a <code>fieldset</code>. The string for the title is actually coming from a Language XML File, which makes it extremely loosely coupled and hard to match unless you know what to look for. The block itself is added to the page in a controller and not in the page model.</p><p>There is an alternative to building shareable blocks that are applied using drag and drop to <code>ContentArea</code> property. Each block is decorated with <code>Content</code> attribute which can have <code>AvailableInEditMode</code> property. Setting that property to <code>false</code> will disallow crating this block as a sharable component. But the block is still very much usabe in our pages or other blocks as a property block.</p><p>Following the <a href="http://world.episerver.com/documentation/developer-guides/CMS/getting-started/creating-your-project/" target="_blank" rel="external">Episerver Getting started</a> tutorial you can create a clean Episerver project to try this out.</p><p>Add a new block:<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[<span class="meta">ContentType(</span></div><div class="line"><span class="meta">    DisplayName = <span class="meta-string">"PetBlock"</span>,</span></div><div class="line"><span class="meta">    GUID = <span class="meta-string">"ebbdbefb-b0e1-40fd-a13e-f408c16ee1fd"</span>,</span></div><div class="line"><span class="meta">    Description = <span class="meta-string">""</span>)</span>]</div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PetBlock</span> : <span class="title">BlockData</span></div><div class="line">&#123;</div><div class="line">    [<span class="meta">CultureSpecific</span>]</div><div class="line">    [<span class="meta">Display(</span></div><div class="line"><span class="meta">        Name = <span class="meta-string">"Name"</span>,</span></div><div class="line"><span class="meta">        Description = <span class="meta-string">"Name field's description"</span>,</span></div><div class="line"><span class="meta">        GroupName = SystemTabNames.Content,</span></div><div class="line"><span class="meta">        Order = 1)</span>]</div><div class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>And add it to your <code>StartPage</code> page model:<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[<span class="meta">ContentType(</span></div><div class="line"><span class="meta">    DisplayName = <span class="meta-string">"StartPage"</span>,</span></div><div class="line"><span class="meta">    GUID = <span class="meta-string">"8205d905-b467-4d0c-ae2c-391d0640456a"</span>,</span></div><div class="line"><span class="meta">    Description = <span class="meta-string">""</span>)</span>]</div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">StartPage</span> : <span class="title">PageData</span></div><div class="line">&#123;</div><div class="line">    [<span class="meta">Display(</span></div><div class="line"><span class="meta">        Name = <span class="meta-string">"Pet"</span>,</span></div><div class="line"><span class="meta">        GroupName = SystemTabNames.Content,</span></div><div class="line"><span class="meta">        Order = 5)</span>]</div><div class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> PetBlock PetBlock &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>And there you have it! Whatever is you set the <code>Name</code> property to in the <code>Display</code> attribute, that will be your title in the all properties view!</p><p>Using blocks as properties is what allowed me to make an interseting feature i will describe in one of the future blog posts.</p><hr><p><em>To take screenshots I use <a href="https://app.prntscr.com/" target="_blank" rel="external">LightShot</a></em></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/posts/2017-04-22-episerver-how-to-get-title-in-all-properties-view/2017-04-22-episerver-how-to-get-title-in-all-properties-view.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;In this article I will describe how to group properties and get a title above them. This will enable some other useful features as well.&lt;br&gt;
    
    </summary>
    
    
      <category term="episerver" scheme="https://developerschallenges.com/tags/episerver/"/>
    
      <category term="tips" scheme="https://developerschallenges.com/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>Episerver Certification</title>
    <link href="https://developerschallenges.com/2016/12/11/episerver-certification/"/>
    <id>https://developerschallenges.com/2016/12/11/episerver-certification/</id>
    <published>2016-12-10T23:00:00.000Z</published>
    <updated>2017-04-22T10:34:17.709Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/posts/2016-12-11-episerver-certification/2016-12-11-episerver-certification.png"></p><p>As of this week I am an Episerver Certified Developer!<br><a id="more"></a></p><hr><p>I took the certification for Episerver CMS version 9, even though version 10 is the latest. I guess they have not updated the tests yet.</p><p>This was not something I planned, but since it is a tool that I am and will be using professionally on occasion, it was a good opportunity to test my knowledge. The invitiation for the certification came from the management only a couple of days before the actual exam, so I had limited time to prepare and my experience with Episerver is not that great. However, I’m familiar with building applications using ASP.NET, and it is the same framework Episerver is built on - so that helped.</p><p>Also, I have a lot of experience with building web applications using CMS systems. My first employer is the creator of a CMS called <a href="http://monox.mono-software.com/" target="_blank" rel="external">MonoX</a>, and it shares some similarites with how Episerver works.</p><p>Here are some tips that helped me:</p><ul><li>go through the <a href="http://world.episerver.com/documentation/cms/" target="_blank" rel="external">documentation</a> - I made my iPhone <a href="https://9to5mac.com/2014/10/04/ios-8-how-to-have-your-ios-device-read-text-for-you/" target="_blank" rel="external">read that for me</a> during my daily commute</li><li>download the official <a href="https://marketplace.visualstudio.com/items?itemName=EPiServer.EpiserverCMSVisualStudioExtension" target="_blank" rel="external">Visual Studio extension</a> - also try creating a solution using one of the templates</li><li>take a look at this <a href="https://www.youtube.com/channel/UCkGn2z3N6kPNi459OLVoF6Q" target="_blank" rel="external">YouTube channel</a></li></ul><p>I look forward to building more web applications using Episerver!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/posts/2016-12-11-episerver-certification/2016-12-11-episerver-certification.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;As of this week I am an Episerver Certified Developer!&lt;br&gt;
    
    </summary>
    
    
      <category term="episerver" scheme="https://developerschallenges.com/tags/episerver/"/>
    
      <category term="tips" scheme="https://developerschallenges.com/tags/tips/"/>
    
      <category term="certification" scheme="https://developerschallenges.com/tags/certification/"/>
    
  </entry>
  
  <entry>
    <title>Simple Angular with TypeScript setup in Visual Studio</title>
    <link href="https://developerschallenges.com/2016/10/28/simple-angular-with-typescript-setup-in-visual-studio/"/>
    <id>https://developerschallenges.com/2016/10/28/simple-angular-with-typescript-setup-in-visual-studio/</id>
    <published>2016-10-27T22:00:00.000Z</published>
    <updated>2017-04-22T10:34:36.815Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/posts/2016-10-28-simple-angular-with-typescript-setup-in-visual-studio/2016-10-28-simple-angular-with-typescript-setup-in-visual-studio.png"></p><p>Web development is getting more complex by the day and all the tooling and frameworks introduce more and more overhead whenever I want to quickly prototype something. No more!<br><a id="more"></a></p><hr><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Writing web apps or just AngularJS modules today requires just too many steps before I actually get to write any code. Sometimes I just want to create a quick prototype or a module outside of the main application. But having to go through the entire project setup phase is just exhausting and demotivational.</p><p>So I decided to focus just on the application code, and kinda patch quickly all the other parts. This can be done through some scaffolding tools like <a href="http://yeoman.io/" target="_blank" rel="external">Yeoman</a> if you have time to discover everything, but since I use Visual Studio, I should really be taking advantage of that.</p><h2 id="Setting-up-the-infrastructure"><a href="#Setting-up-the-infrastructure" class="headerlink" title="Setting up the infrastructure"></a>Setting up the infrastructure</h2><p>So lets focus on the goal here. I want my prototype app or module to be decoupled from all the frameworks, infrastructure and other parts of a potentially larger application. That means NO Bower, Nuget, NPM, Webpack, Gulp, Grunt, MSBuild, whatever… We need to go <em>old school</em>!</p><p>Just like when you use <a href="https://plnkr.co/" target="_blank" rel="external">Plunker</a>, <a href="https://jsfiddle.net/" target="_blank" rel="external">JSFiddle</a> or something else, you would just include external libraries from a CDN. If there is no CDN available, just drag-and-drop the file into your scripts folder, and then include it in your index.html file. As for typings <em>.d.ts</em> files, just download those into a separate folder.</p><h2 id="AngularJS-with-TypeScript"><a href="#AngularJS-with-TypeScript" class="headerlink" title="AngularJS with TypeScript"></a>AngularJS with TypeScript</h2><p>I want my .ts files and a generated .js file I can include in index.html file. Available for about a <a href="https://blogs.msdn.microsoft.com/typescript/2015/07/20/announcing-typescript-1-5/" target="_blank" rel="external">year</a> is <em><a href="https://www.typescriptlang.org/docs/handbook/tsconfig-json.html" target="_blank" rel="external">tsconfig.json</a></em> which works great with the editor. This configuration file just tells your editor how to work with the typescript files, for which you would have to use a task runner before. One thing less in my quick setup.</p><p>This, together with Visual Studio, is the infrastructure I need to go from TypeScript to JavaScript.</p><h2 id="Simple-AngularJS-setup"><a href="#Simple-AngularJS-setup" class="headerlink" title="Simple AngularJS setup"></a>Simple AngularJS setup</h2><p>I created a simple <a href="https://github.com/dalibormesaric/simple-angular-with-typescript-setup-in-visual-studio" target="_blank" rel="external">project</a> as a starting point for an app or module. This includes Bootstrap and AngularJS libraries, typings, and a simple module with a controller and a service. There is also a configured tsconfig.json file that compiles all TypeScript files.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Now that the base is defined, I could easily build number of modules and couple them in a larger application. If there is a module I need, like a Bootstrap datepicker - I would just include that library from CDN or copy the code from GitHub.</p><p>This way I have a quick demo and a well organized prototype.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/posts/2016-10-28-simple-angular-with-typescript-setup-in-visual-studio/2016-10-28-simple-angular-with-typescript-setup-in-visual-studio.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Web development is getting more complex by the day and all the tooling and frameworks introduce more and more overhead whenever I want to quickly prototype something. No more!&lt;br&gt;
    
    </summary>
    
    
      <category term="angularjs" scheme="https://developerschallenges.com/tags/angularjs/"/>
    
      <category term="typescript" scheme="https://developerschallenges.com/tags/typescript/"/>
    
      <category term="visual studio" scheme="https://developerschallenges.com/tags/visual-studio/"/>
    
      <category term="tooling" scheme="https://developerschallenges.com/tags/tooling/"/>
    
      <category term="setup" scheme="https://developerschallenges.com/tags/setup/"/>
    
  </entry>
  
  <entry>
    <title>UX Rant - September 2016 Edition</title>
    <link href="https://developerschallenges.com/2016/09/25/ux-rant-september-2016-edition/"/>
    <id>https://developerschallenges.com/2016/09/25/ux-rant-september-2016-edition/</id>
    <published>2016-09-24T22:00:00.000Z</published>
    <updated>2017-09-06T14:23:29.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/posts/2016-09-25-ux-rant---september-2016-edition/2016-09-25-ux-rant---september-2016-edition.png"></p><p>It looks like our proffession can’t agree on what the experiance on the web should be. Constant re-innovation just confuses me, so this is my rant.<br><a id="more"></a></p><hr><h2 id="Google’s-Olympics-Widget"><a href="#Google’s-Olympics-Widget" class="headerlink" title="Google’s Olympics Widget"></a>Google’s Olympics Widget</h2><p>Last month there were the olympics, and Google made a nice widget in their search so it was easy so look up athletes and medals per country. During this period sometimes athletes make unexpected results and that was the case for some from my country. I used to do a google search for “Croatia olympics” to see the latest results. I wanted to look up some of the athletes from the widget in google search and learn more about them. How I usually do this, is select a text, right click and select search with google.</p><p>But it this case the whole thing was a button, even though it was also a text. It was imposible to select a text and to a right click or even copy the text to clipboard.</p><p><img src="/images/posts/2016-09-25-ux-rant---september-2016-edition/google-olympics.gif"></p><p>When it comes to web elements that should act on mouse click, the main ones are the button and the anchor element. Not the whole area behind the text with the text included. Especialy not with the right click. I hate when I lose my context and then have to go back to where I was just because of someone reinventing the button.</p><h2 id="Twitter-Search"><a href="#Twitter-Search" class="headerlink" title="Twitter Search"></a>Twitter Search</h2><p>This was on my rant todo list for a while. It’s about moving content after something is loaded on your page. I use twitter as an example, but there are so many cases of this terribe UX.</p><p>When I search for someone and I know their name will show up first, I type first letters with my left hand, and use my right hand to point the mouse to the first place where I expect the result. Except the result position changes if I’m not fast enough, and I click on a random thing that shows up there even though I never asked for it.</p><p><img src="/images/posts/2016-09-25-ux-rant---september-2016-edition/twitter.gif"></p><p>Keep your “smart suggestions” content elsewhere it you really need to show it. And stop moving content around. This is much more annoying when an ad shows up where I wanted to click on a link, and I end up clicking on the ad instead.</p><h2 id="Google-Chrome-Backspace-Removal"><a href="#Google-Chrome-Backspace-Removal" class="headerlink" title="Google Chrome Backspace Removal"></a>Google Chrome Backspace Removal</h2><p>Web browsers should keep a promise of supporting the web that is, was and will be created. That goes with all surrounding experience in the browser. Navigation is very important, and the web is designed that you can navigate to new sites, but you always have to be able to go back.</p><p>I’m used to going back using backspace, and Chrome team invented new way of going back. Right Alt + Left Arrow. Try pressing that with one hand. Try it and feel the pain on the innovation. You can’t use the right Alt because that would rotate your screen in Windows.</p><p><img src="/images/posts/2016-09-25-ux-rant---september-2016-edition/backspace.gif"></p><p>Then they released an extension that fixes this, arguing that this is how it should be handeled - throuhg an extension. Even though they removed the Chromecast extension and built it in the browser. These teams need to hang out together somethimes.</p><p>But this just goes well with the fact that google search hijacks your keyboard input and pressing backspace would delete the last letter even though the search box is not in focus. This is for every browser, even the ones where you would expect to go back by pressing backspace.</p><p>Some articles on this <em>feature</em>:</p><ul><li><a href="https://bugs.chromium.org/p/chromium/issues/detail?id=608016" target="_blank" rel="external">https://bugs.chromium.org/…</a></li><li><a href="http://mashable.com/2016/08/17/google-chrome-backspace-extension" target="_blank" rel="external">http://mashable.com/…</a></li><li><a href="https://www.engadget.com/2016/08/17/chrome-go-back-with-backspace/" target="_blank" rel="external">https://www.engadget.com/…</a></li><li><a href="http://arstechnica.com/gadgets/2016/08/google-cast-gets-built-into-chrome/" target="_blank" rel="external">http://arstechnica.com/…</a></li></ul><hr><p><em>To record gifs I use <a href="https://github.com/NickeManarin/ScreenToGif/" target="_blank" rel="external">ScreenToGif</a></em></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/posts/2016-09-25-ux-rant---september-2016-edition/2016-09-25-ux-rant---september-2016-edition.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;It looks like our proffession can’t agree on what the experiance on the web should be. Constant re-innovation just confuses me, so this is my rant.&lt;br&gt;
    
    </summary>
    
    
      <category term="ux" scheme="https://developerschallenges.com/tags/ux/"/>
    
      <category term="rant" scheme="https://developerschallenges.com/tags/rant/"/>
    
      <category term="google" scheme="https://developerschallenges.com/tags/google/"/>
    
      <category term="backspace" scheme="https://developerschallenges.com/tags/backspace/"/>
    
      <category term="twitter" scheme="https://developerschallenges.com/tags/twitter/"/>
    
      <category term="search" scheme="https://developerschallenges.com/tags/search/"/>
    
      <category term="olympics" scheme="https://developerschallenges.com/tags/olympics/"/>
    
      <category term="widget" scheme="https://developerschallenges.com/tags/widget/"/>
    
  </entry>
  
  <entry>
    <title>How to run Graylog on Ubuntu Server in Hyper-V</title>
    <link href="https://developerschallenges.com/2016/06/01/how-to-run-graylog-on-ubuntu-server-in-hyper-v/"/>
    <id>https://developerschallenges.com/2016/06/01/how-to-run-graylog-on-ubuntu-server-in-hyper-v/</id>
    <published>2016-05-31T22:00:00.000Z</published>
    <updated>2017-04-22T10:35:14.301Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/posts/2016-06-01-how-to-run-graylog-on-ubuntu-server-in-hyper-v/2016-06-01-how-to-run-graylog-on-ubuntu-server-in-hyper-v.png"></p><p>I wanted to set up Graylog log management tool on an Ubuntu Server running in Hyper-V. It has been a while since the last time I did this, and couple of things have changed…<br><a id="more"></a></p><hr><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p><a href="https://www.graylog.org/" target="_blank" rel="external">Graylog</a> is a log management tool that I first discovered a couple of years ago. I appreciate logging and monitoring while developing software for both capturing errors and seeing if anyone is actually using/testing the features you implemented. Having a centralized log management tool is very convenient to have an entire team aware of what is going on in software projects. Graylog is easy to set up and it has a nice dashboard with a powerful way of querying logs.</p><p>When I first set up Graylog it was called Graylog2 and it was still in pre-release phase. I knew I want to run an Ubuntu Server instance in an Azure VM. Since I’m a windows developer, setting up all the dependencies through bash is not something I enjoy, but luckily I found a cool script by <a href="https://twitter.com/mrlesmithjr" target="_blank" rel="external">@mrlesmithjr</a> on his <a href="http://everythingshouldbevirtual.com/ubuntu-12-04-graylog2-installation" target="_blank" rel="external">blog</a>. The process was pretty straightforward, and in couple of minutes I had Graylog2 running in an Azure VM. After that, all I had to was open the correct port and add GELF log4net provider to my project, and logs started streaming in.</p><p>Two years later, or now, I wanted to do the same thing, but of course the new versions of Graylog and its dependencies came out. So in order to run the latest and greatest I went back to the script I used the first time. Unfortunately, the author stopped the maintenance because he switched to a different way of managing software tools - using <a href="https://www.ansible.com/" target="_blank" rel="external">Ansible</a>. This is not something I am interested investing in at the moment. All I wanted was a Graylog server on my Hyper-V VM. How hard can that be?</p><h2 id="Graylog-running-in-Hyper-V"><a href="#Graylog-running-in-Hyper-V" class="headerlink" title="Graylog running in Hyper-V"></a>Graylog running in Hyper-V</h2><p>When you go to the Graylog’s <a href="https://www.graylog.org/download" target="_blank" rel="external">download page</a> you get a number of options to choose from. But if you are a .NET developer you’ll see a lot of things you have never heard of. Feel free to explore a bit because you never know what you might find interesting. But to proceed with the mission of running Graylog in Hyper-V, <a href="https://en.wikipedia.org/wiki/Open_Virtualization_Format" target="_blank" rel="external"><strong>OVA</strong></a> is what you want.</p><p><strong>OVA</strong> is an open standard for distributing virtual appliances. When you click the link on Graylog’s download page, you’ll see more details on how to use it inside <a href="https://www.virtualbox.org/" target="_blank" rel="external">VirtualBox</a>. You will also need to download VirtualBox in order to create a .VHD disk image that you will use in Hyper-V.</p><p>Quick google search showed me how to get from .OVA to .VHD. You should rename the .OVA extension to .TAR and extract the archive in a folder (e.g. C:\vm).</p><p>After that just run the following command to get the .VHD disk image.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\Program Files\Oracle\VirtualBox&gt;VBoxManage.exe clonehd --format vhd C:\vm\graylog-disk1.vmdk C:\vm\graylog.vhd</div></pre></td></tr></table></figure><p>As a final step all you need to do is create a new Virtual Machine in Hyper-V, and attach the .VHD file. Make sure your VM has enough RAM (4GB is recommended).</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>To recap:</p><ol><li>Download <a href="http://docs.graylog.org/en/2.0/pages/installation/virtual_machine_appliances.html" target="_blank" rel="external">Graylog</a></li><li>Download <a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="external">VirtualBox</a></li><li>Rename extension .OVA to .TAR and extract to <em>C:\vm</em></li><li>Run <em>C:\Program Files\Oracle\VirtualBox&gt;VBoxManage.exe clonehd –format vhd C:\vm\graylog-disk1.vmdk C:\vm\graylog.vhd</em></li><li>Create a VM with 4GB of RAM in Hyper-V and attach .VHD that you created</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/posts/2016-06-01-how-to-run-graylog-on-ubuntu-server-in-hyper-v/2016-06-01-how-to-run-graylog-on-ubuntu-server-in-hyper-v.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;I wanted to set up Graylog log management tool on an Ubuntu Server running in Hyper-V. It has been a while since the last time I did this, and couple of things have changed…&lt;br&gt;
    
    </summary>
    
    
      <category term="graylog" scheme="https://developerschallenges.com/tags/graylog/"/>
    
      <category term="ubuntu" scheme="https://developerschallenges.com/tags/ubuntu/"/>
    
      <category term="hyper-v" scheme="https://developerschallenges.com/tags/hyper-v/"/>
    
      <category term="logging" scheme="https://developerschallenges.com/tags/logging/"/>
    
      <category term="virtualbox" scheme="https://developerschallenges.com/tags/virtualbox/"/>
    
  </entry>
  
</feed>
